R()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
library(swirl)
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, state, layout=c(4,1))
xyplot(Life.Exp ~ Income | region, state, layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
length(table(mpg$model))
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
range(airquality$Ozone)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone, airquality)
boxplot(Ozone~month.abb, airquality)
boxplot(formula = Ozone~month.abb, airquality)
boxplot(Ozone~month, airquality)
boxplot(Ozone~Month, airquality)
boxplot(Ozone, airquality)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title("Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title("Ozone and Wind in New York City")
par(length)
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plit(airquality$Wind, airquality$Ozone, type ="n")
plot(airquality$Wind, airquality$Ozone, type ="n")
title(main="Wind and Ozone in NYC")
may <- airquality[Months == "5"]
may <- airquality[months == "5"]
may <- airquality[months = "5"]
may <- airquality[months = 5]
may <- airquality[months,]
head(airquality)
may <- airquality[Month = 5]
may <- airquality[Month == 5]
may <- airquality["Month" == 5]
may <- airquality["Month" == 5,1]
may <- airquality["Month" == 5,]
may <- subset(airquality, Month == 5,]
may <- subset(airquality, Month == 5)
points(wind~ozone, may)
points(Wind~Ozone, may)
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, Month != 5)
points(may$Wind, may$Ozone, col="red", pch=)
points(may$Wind, may$Ozone, col="red", pch=8)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch=c(17,8), col = c("blue","red"), legend = c("May","Other Months"))
line(median(airquality$Wind), lty=2, lwd=2)
line(mean(airquality$Wind), lty=2, lwd=2)
abline(mean(airquality$Wind), lty=2, lwd=2)
abline(v=mean(airquality$Wind), lty=2, lwd=2)
abline(v=median(airquality$Wind), lty=2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar=c(4,4,2,1), oma=c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main="Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main="Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Solar Temparature")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Solar Temperature")
plot(airquality$Temp, airquality$Ozone, main="Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer=T)
mtext("Ozone and Weather in New York City", outer=TRUE)
library(swirl)
swirl()
head(airquality)
xyplot(Ozone~Wind)
xyplot(Ozone~Wind, airquality)
xyplot(Ozone~Wind, airquality, col="red", pch=8 , main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, col="red", pch=8 , main = "Big Apple Data")
xyplot(Ozone~Wind, data = airquality, pch=8, col="red", main = "Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), layout = c(5,1))
xyplot(Ozone~Wind | as.factor(Month), dataset = airquality, layout = c(5,1))
xyplot(Ozone~Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone~Wind, data = airquality, layout = c(5,1))
xyplot(Ozone~Wind, data = airquality)
xyplot(Ozone~Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone~Wins, data = airquality)
p <- xyplot(Ozone~window, data = airquality)
p <- xyplot(Ozone~Wind, data = airquality)
print(p)
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(g)
table(f)
f
xyplot(x~y|f, c(2,1))
xyplot(y~x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R"),local = TRUE)
myedit("plotw.R")
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabes.R")
myedit("myLabels.R")
soure(pathtofile("myLabels.R"))
source(pathtofile("myLabels.R"))
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat)
xyplot(price~carat, data = diamonds)
xyplot(price~carat | color, data = diamonds)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
names(colors())
names(colors
names(colors())
names(colors)
colors()
source(colors(),10)
source(colors,10)
source(colors,10, local = TRUE)
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(0.5)
pal(1)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(100)
p1(3)
p1(4)
p1(6)
0xcc
p1 <- colorRampPalette(c("red","yellow"))
p2 <- colorRampPalette(c("red","yellow"))
p2(2)
p2(10)
showMe
showMe(p1(20))
showMe(p2(100))
showMe(p2(1000))
showMe(p2(10))
showMe(p2(1))
showMe(p2(2))
showMe(p2(3))
showMe(p2(4)
)
showMe(p2(5))
showMe(p2(6))
showMe(p2(7))
showMe(p2(8))
showMe(p2(9))
showMe(p2(10))
showMe(p2(20))
showMe(p2(2))
p1
?rgb
p3 <- colorRampPalette(c("blue","green"))
p3 <- colorRampPalette(c("blue","green"), alpha=.5)
p3(5)
plot(x,y,pch=19,col=rgb(0,.5,.5)
)
plot(x,y,pch=19,col=rgb(0,.5,.5,.3))
cols <- brewer.pal(3, "BuGn")
cols
showMe(cols)
pal <- colorRampPalette(cols)
pal(3)
showMe(pal(20)
)
pal(20)
image(volcano, col=pal(20))
image(volcano, col=p1(20))
str(mpg)
head(mpg)
qplot(displ, hwy, mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, aes(col = drv))
qplot(displ, hwy, data = mpg, col = drv)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y=hwy, x=mpg, color=drv)
qplot(y=hwy, data=mpg, color=drv)
qplot(y=hwy, data=mpg, geom(hist))
qplot(y=hwy, data=mpg, geom=hist())
qplot(y=hwy, data=mpg, geom=hist
)
qplot(y=hwy, data=mpg, geom="hist")
myhigh
qplot(y=hwy, data=mpg, color=drv)
qplot(drv, hwy, data=mpg, hist="noxplot")
qplot(drv, hwy, data=mpg, geom ="boxplot")
qplot(drv, hwy, data=mpg, geom ="boxplot", color = manufacturer)
play()
qplot(hwy, data=mpg, geom ="boxplot", color = manufacturer)
qplot(y=hwy, data=mpg, geom ="boxplot", color = manufacturer)
qplot(y=hwy, data=mpg, geom ="hist", color = manufacturer)
qplot(y=hwy, data=mpg, geom ="histogram", color = manufacturer)
qplot(y=hwy, data=mpg, geom ="boxplot")
qplot(y=hwy, x=drv, data=mpg, geom ="boxplot")
qplot(y=hwy, x=drv, data=mpg, geom ="boxplot", color=manufacturer)
nxt()
qplot(hwy, data=mpg)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = .~drv)
qplot(hwy, data = mpg, facets = .~drv, binwidth = 2)
qplot(hwy, data = mpg, facets = drv~., binwidth = 2)
qplot(x=displ, y=hwy, data=mpg, geom=c("point", "smooth"), fects=.~drv)
qplot(displ, hwy, data=mpg, geom=c("point", "smooth"), fects=.~drv)
qplot(x=displ, y=hwy, data=mpg, geom=c("point", "smooth"), facets=.~drv)
g <- ggplot(mpg, aes(displ, hwy)
)
g
summary(g)
g
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method="lm")
g+geom_point()+geom_smooth(method="lm")+facet_grid(.~drv)
g + geom_point() + geom_smooth(method="lm") + facet_grid(.~drv) + ggtitle("Swirl Rules!")
g + geom_point(color="pink", size=4, aplha=1/2)
g+geom_point(color="pink",size=4,alpha=1/2)
g+geom_point(size=4,alpha=1/2,color=drv)
g+geom_point(size=4,alpha=1/2,aes(color=drv))
g+geom_point(aes(color=drv))
g+geom_point(aes(color=drv))+labs("Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(aes(color=drv))+labs(title="Swirl Rules!")+labs(x="Displacement", y="Hwy Mileage")
g+geom_point(size=2,alpha=1/2,aes(color=drv))+geom_smooth(size=4, linetype=3, method="lm", se = F)
g+geom_point(size=2,alpha=1/2,aes(color=drv))+geom_smooth(size=4, linetype=3, method="lm", se = FALSE)
g+geom_point(aes(color=drv))+theme_bw(base_family = "Times")
plot(myx, myy, type="l", ylim=c(-3,3))
myx
g <- ggplot(data=testdata, x=myx, y=myy)
g <- ggplot(data=testdat, x=myx, y=myy)
g
testdat
ggplot(x,y)
ggplot(testdat)
g <- ggplot(testdat, aes(x,y))
g
g <- ggplot(testdat, aes(x = myx, myy))
g
g + geom_line()
g + geom_line(ylim(-3,3))
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim(-3,3))
g + geom_line() + coord_cartesian(ylim = c(-3,3)
)
g <- ggplot(mpg, aes(x=displ, y=hwy, color=factor(year)))
g
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm", se=FALSE, size=1/2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm", se=FALSE, size=1/2, color="black") + labs(x="Displacement", y="Highway Mileage", title = "Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm", se=FALSE, size=1/2, color="black") + labs(x="Displacement", y="Highway Mileage", title = "Swirl Rules!")
g + geom_point() + facet_grid(drv~cyl,margins=TRUE)+geom_smooth(method="lm",size=2, se=FALSE, color="black") + labs(x="Displacement", y="Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price)
qplot(price, diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
18823-326
18497/30
qplot(price, data = diamonds, binwidth=18497/30)
brk
counts
qplot(price, data = diamonds, binwidth=18497/30, fill=cut)
ggplot(price, data=diamonds)+facets(.~cut)
ggplot(y=price, data=diamonds)+facets(.~cut)
ggplot(y=price, data=diamonds, facets(.~cut))
qplot(price, data = diamonds, binwidth=18497/30, facets = cut)
qplot(price, data = diamonds, binwidth=18497/30, facets = .~cut)
qplot(price, data = diamonds, geom="desnity")
qplot(price, data = diamonds, geom="density")
qplot(price, data = diamonds, geom="density", color=cut)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut
)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method="lm"))
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut) + geom_smooth(method = "lm")
qplot(carat, price, data=diamonds, color=cut, facets = .~cut) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
g
summary(g)
g + geom_point(alpha=1/3)
seq(0,1, lenght=4)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm = TRUE)
cutpoints
range(diamonds$carat)
cutpoints <- quantile(diamonds$carat, seq(0,1,length=10), na.rm = TRUE)
cutpoints
cutpoints <- quantile(diamonds$carat, seq(0,1,length=3), na.rm = TRUE)
cutpoints
play()
cutpoints
cutpoints <- quantile(diamonds$carat, seq(0,1,length=3), na.rm = TRUE)
cutpoints
cutpoints <- quantile(diamonds$carat, seq(0,1,length=10), na.rm = TRUE)
cutpoints
cutpoints <- quantile(diamonds$carat, seq(0,1,length=9), na.rm = TRUE)
cutpoints
cutpoints <- quantile(diamonds$carat, seq(0,1,length=11), na.rm = TRUE)
cutpoints
seq(0,1,10)
seq(0,1, lenght=10)
seq(0,1, length=10)
seq(0,1, length=4)
nxt()
cutpoints <- quantile(diamonds$carat, seq(0,1,length=4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha=1/3) + facet_grid(cut ~ car2)
myd
diamonds[[myd]]
diamonds[myd,]
g + geom_point(alpha=1/3) + facet_grid(cut ~ car2)+geom_smooth(method="lm", size=3, color="pink")
g + geom_boxplot() +facet_grid(~.cut)
g
ggplot(diamonds, ase(carat, price)) + geom_boxplot() + facet_gr(.~cut)
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_gr(.~cut)
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
5
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
qplot(Wind, Ozone, data = airquality)
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
g <- ggplot(data =movies, aes(votes, rating))
g <- ggplot(data = ggplot2movies, aes(votes, rating))
ggplot2movies
movies
qplot(votes, rating, data = movies)
library(ggplot2)
library(ggplot2movies)
df
str(df)
df
class(df)
activity
setwd("C:/Users/dionysios.fragkoulis/OneDrive - Accenture/My Documents/Accenture/Training/Coursera/Data Science Specialization/5. Reproducible Research/Week 2 - Course Project/RepData_PeerAssessment1")
activity <- read.csv("activity.csv")
activity
str(activity)
tapply(activity, activity$date, length)
tapply(activity, activity$date, sum)
tapply(activity$steps, activity$date, sum)
tapply(activity$interval, activity$date, sum)
factor(activity$interval)
activity$interval
str(activity)
activity$interval <- factor(activity$interval)
str(activity)
tapply(activity$interval, activity$date, sum)
tapply(activity$steps, activity$interval, sum)
tapply(activity$steps, activity$interval, sum, rm.na = TRUE)
activity$steps[activity$interval == "2355"]
sum(activity$steps[activity$interval == "2355"])
sum(activity$steps[activity$interval == "2355"], rm.na = TRUE)
class(activity$steps[activity$interval == "2355"])
class(activity$steps[activity$interval == "5"])
activity$steps[activity$interval == "5"]
activity$steps[activity$interval == "310"]
activity$steps[activity$interval == "320"]
activity$steps[activity$interval == "315"]
a<-activity$steps[activity$interval == "315"]
sum(a)
a<-activity$steps[activity$interval == "315"]
a
is.na(a)
is.na(a, rm.na = T)
sum(a, rm.na = T)
sum(a, na.rm = T)
activity$steps[activity$interval == "2355"]
sum(activity$steps[activity$interval == "2355"], na.rm = TRUE)
avgStepsPerInterval <- tapply(activity$steps, activity$date, mean, na.rn = TRUE)
avgStepsPerInterval
avgStepsPerInterval <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
avgStepsPerInterval
which.max(avgStepsPerInterval)
rm.na = T
na.rm = T
totalStepsPerDay <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
activity <- read.csv("activity.csv")
totalStepsPerDay <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
hist(totalStepsPerDay, xlab = "Steps per Day", main = "Frequency of Steps per Day", col = rainbow(5))
totalStepsPerDay
totalStepsPerDay <- tapply(activity$steps, activity$date, sum)
totalStepsPerDay
hist(totalStepsPerDay, xlab = "Steps per Day", main = "Frequency of Steps per Day", col = rainbow(5))
totalStepsPerDay <- tapply(activity$steps, activity$date, sum, na.rm=TRUE)
hist(totalStepsPerDay, xlab = "Steps per Day", main = "Frequency of Steps per Day", col = rainbow(5))
activity <- read.csv("activity.csv")
totalStepsPerDay <- tapply(activity$steps, activity$interval, sum)
totalStepsPerDay
totalStepsPerDay <- tapply(activity$steps, activity$interval, sum, na.rm = T)
totalStepsPerDay
str(activity)
totalStepsPerDay <- tapply(activity$steps, activity$interval, mean, na.rm = T)
totalStepsPerDay
write.csv(totalStepsPerDay, "test1.csv")
activity$interval <- as.factor(activity$interval)
totalStepsPerDay <- tapply(activity$steps, activity$interval, mean, na.rm = T)
totalStepsPerDay
write.csv(totalStepsPerDay, "test2.csv")
plot(y=activity$steps, x=activity$interval)
plot(y=avgStepsPerInterval, x=activity$interval)
plot(y=avgStepsPerInterval ~ x=activity$interval)
plot(avgStepsPerInterval)
plot(avgStepsPerInterval, type = "l")
class(avgStepsPerInterval)
avgStepsPerInterval <- as.data.frame(avgStepsPerInterval)
plot(avgStepsPerInterval, type = "l")
class(avgStepsPerInterval)
avgStepsPerInterval
names(avgStepsPerInterval) = c("Interval", "Average Steps per Interval")
names(avgStepsPerInterval)
dim(avgStepsPerInterval)
avgStepsPerInterval <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
df <- data.frame(interval=names(avgStepsPerInterval), "Average Steps Per Interval", avgStepsPerInterval)
df
df <- data.frame(interval=names(avgStepsPerInterval), "Average Steps Per Interval" = avgStepsPerInterval)
df
plot(df, type = "l")
plot(df)
class(df$interval)
df <- data.frame(interval=names(avgStepsPerInterval), "Average Steps Per Interval" = avgStepsPerInterval)
df$interval <- as.integer(df$interval)
class(df$interval)
plot(df)
plot(df$Average.Steps.Per.Interval, df$interval)
plot(y = df$Average.Steps.Per.Interval, x = df$interval)
plot(y = df$Average.Steps.Per.Interval, x = df$interval, type = "l")
df$interval
df <- data.frame(interval=names(avgStepsPerInterval), "Average Steps Per Interval" = avgStepsPerInterval)
df$interval
as.numeric(as.character(df$interval))
df$interval <- as.numeric(as.character(df$interval))
plot(y = df$Average.Steps.Per.Interval, x = df$interval, type = "l")
avgStepsPerInterval <- data.frame(interval=names(avgStepsPerInterval), avgStepsPerInterval = avgStepsPerInterval)
plot(x = avgStepsPerInterval$interval, y = avgStepsPerInterval$avgStepsPerInterval, type = "l")
avgStepsPerInterval$interval <- as.numeric(as.character(avgStepsPerInterval$interval))
plot(x = avgStepsPerInterval$interval, y = avgStepsPerInterval$avgStepsPerInterval, type = "l")
avgStepsPerInterval <- tapply(activity$steps, activity$interval, mean, na.rm = TRUE)
avgStepsPerInterval <- data.frame(interval=names(avgStepsPerInterval), averageSteps = avgStepsPerInterval)
avgStepsPerInterval$interval <- as.numeric(as.character(avgStepsPerInterval$interval))
plot(x = avgStepsPerInterval$interval, y = avgStepsPerInterval$averageSteps, type = "l", xlab  = "Interval", ylab = "Average Steps (per Interval)")
plot(x = avgStepsPerInterval$interval, y = avgStepsPerInterval$averageSteps, type = "l", xlab  = "Interval", ylab = "Average Steps", main = "Average Steps per Interval")
plot(x = avgStepsPerInterval$interval, y = avgStepsPerInterval$averageSteps, type = "l", xlab  = "Interval", ylab = "Average Steps", main = "Average Steps per Interval", col = "blue", lwd = 2)
which.max(avgStepsPerInterval$interval)
which.max(avgStepsPerInterval$averageSteps)
avgStepsPerInterval$interval[which.max(avgStepsPerInterval$averageSteps)]
avgStepsPerInterval[which.max(avgStepsPerInterval$averageSteps),]
avgStepsPerInterval[which.max(avgStepsPerInterval$averageSteps),2]
sum(is.na(activity$date))
sum(is.na(activity$steps))
sum(is.na(activity$interval))
library(chron)
activity$isWeekend <- is.weekend(activity$date)
sum(is.na(activity$isWeekend))
sapply(activity, is,na)
sapply(activity, is.na)
sum(sapply(activity, is.na))
class(sapply(activity, is.na)))
class(sapply(activity, is.na))
sapply(sapply(activity, is.na)), sum)
sapply(activity, is.na)
as.data.frame(sapply(activity, is.na))
sapply(as.data.frame(sapply(activity, is.na)), sum)
library(knitr)
kable(as.data.frame(sapply(as.data.frame(sapply(activity, is.na)), sum)))
as.data.frame(sapply(as.data.frame(sapply(activity, is.na)), sum))
NATable <- as.data.frame(sapply(as.data.frame(sapply(activity, is.na)), sum))
names(NATable) <- c("COlumns", "# of NAs")
dim(NATable)
sapply(as.data.frame(sapply(activity, is.na)), sum)[1]
sapply(as.data.frame(sapply(activity, is.na)), sum)[1,]
sapply(as.data.frame(sapply(activity, is.na)), sum)
NATable <- sapply(as.data.frame(sapply(activity, is.na)), sum)
NATable <- data.frame(Columns=names(NATable), "No of NAs" = NATable)
NATable
kable(NATable)
